{
  "name": "hotel-common",
  "version": "1.0.0",
  "description": "Hotel management system integration foundation library",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "require": "./dist/index.js",
      "import": "./dist/index.js"
    },
    "./prisma": {
      "types": "./src/generated/prisma/index.d.ts",
      "require": "./src/generated/prisma/index.js",
      "import": "./src/generated/prisma/index.js"
    },
    "./database": {
      "types": "./src/database/index.ts",
      "require": "./src/database/index.js",
      "import": "./src/database/index.js"
    },
    "./unified-client": {
      "types": "./src/api/unified-client.ts",
      "require": "./src/api/unified-client.js",
      "import": "./src/api/unified-client.js"
    }
  },
  "files": [
    "dist/**/*",
    "README.md",
    "package.json"
  ],
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "dev": "tsc --watch",
    "start": "npm run build && node dist/server/index.js",
    "start:dev": "npm run build && node --env-file=.env dist/server/index.js",
    "start:integration": "npm run build && node dist/server/integration-server.js",
    "start:integration:dev": "npm run build && node --env-file=.env dist/server/integration-server.js",
    "start:admin": "ts-node src/admin/admin-server.ts",
    "start:admin:dev": "nodemon --exec ts-node src/admin/admin-server.ts",
    "clean": "rm -rf dist",
    "prepublishOnly": "npm run clean && npm run build",
    "test": "echo \"Tests will be implemented later\" && exit 0",
    "demo:governance": "npm run build && node scripts/governance-demo.js",
    "governance:check": "npm run build && node -e \"console.log('段階的監視システム動作確認中...'); require('./dist/governance/config').governanceManager.getCurrentConfig();\"",
    "migration:member": "ts-node scripts/hotel-member-migration-toolkit.ts",
    "migration:member:prepare": "npm run migration:member prepare",
    "migration:member:execute": "npm run migration:member execute",
    "migration:member:validate": "npm run migration:member validate",
    "migration:member:status": "npm run migration:member status",
    "migration:member:rollback": "npm run migration:member rollback",
    "migration:simple": "node scripts/hotel-member-migration-simple.js",
    "migration:simple:status": "node scripts/hotel-member-migration-simple.js status",
    "migration:simple:prepare": "node scripts/hotel-member-migration-simple.js prepare",
    "migration:simple:execute": "node scripts/hotel-member-migration-simple.js execute",
    "migration:simple:full": "node scripts/hotel-member-migration-simple.js full",
    "integration:monitor": "ts-node scripts/integration-monitor.ts",
    "integration:daily": "npm run integration:monitor",
    "type-check": "tsc --noEmit",
    "test:seven-integration": "npm run build && node scripts/test-seven-integration.js",
    "demo:seven-integration": "node -r ts-node/register examples/seven-integration-demo.ts",
    "test:seven-integration-simple": "node scripts/simple-seven-test.js",
    "seven-integration:info": "echo '🎊 hotel-common七重統合システム - 文献1-7完全統合による50倍効率・99.5%コスト削減' && node scripts/simple-seven-test.js",
    "build:seven-integration": "tsc -p tsconfig.seven-integration.json",
    "build:seven-integration-only": "tsc --build tsconfig.seven-integration.json",
    "watch:seven-integration": "tsc -p tsconfig.seven-integration.json --watch",
    "test:ai-connection": "node scripts/test-ai-connection.js",
    "test:rag-system": "node scripts/test-rag-system.js",
    "test:prompt-optimization": "node scripts/test-prompt-optimization.js",
    "test:seven-integration-complete": "node scripts/test-seven-integration-complete.js",
    "setup:project-integration": "node scripts/setup-project-integration.js",
    "setup:hotel-saas": "node scripts/setup-project-integration.js hotel-saas",
    "setup:hotel-member": "node scripts/setup-project-integration.js hotel-member",
    "setup:hotel-pms": "node scripts/setup-project-integration.js hotel-pms",
    "setup:cursor-integration": "node scripts/setup-cursor-integration.js",
    "setup:cursor-saas": "node scripts/setup-cursor-integration.js hotel-saas",
    "setup:cursor-member": "node scripts/setup-cursor-integration.js hotel-member",
    "setup:cursor-pms": "node scripts/setup-cursor-integration.js hotel-pms",
    "test:hybrid-integration": "node scripts/test-hybrid-integration.js",
    "hybrid:demo": "node scripts/test-hybrid-integration.js",
    "start:dynamic-integration": "node scripts/start-dynamic-integration.js",
    "ことわり": "node scripts/start-dynamic-integration.js",
    "setup:rag-integration": "node scripts/setup-rag-document-integration.js",
    "test:rag-integration": "node scripts/test-rag-integration.js",
    "setup:auto-kotowari": "SETUP_MODE=true node scripts/setup-auto-kotowari-rules.js",
    "start:auto-kotowari": "node scripts/setup-auto-kotowari-rules.js",
    "setup:multi-project": "node scripts/setup-multi-project-kotowari.js",
    "kotowari-master": "node scripts/kotowari-master-control.js",
    "setup:complete-system": "npm run setup:rag-integration && npm run setup:auto-kotowari && npm run setup:multi-project",
    "guardrails:validate": "node scripts/cursor-guardrails-integration.js validate",
    "guardrails:demo": "node scripts/cursor-guardrails-integration.js demo",
    "guardrails:test": "node scripts/cursor-guardrails-integration.js demo",
    "prisma:generate": "prisma generate",
    "prisma:push": "prisma db push",
    "prisma:studio": "prisma studio",
    "rag": "node scripts/enhanced-rag-system.js",
    "practical": "node scripts/practical-solution.js",
    "enhanced-rag": "node scripts/enhanced-rag-system.js",
    "actual-guardrails": "node scripts/actual-guardrails-system.js",
    "monitor-guardrails": "node scripts/continuous-guardrails-monitor.js",
    "start-background-guardrails": "node scripts/continuous-guardrails-monitor.js",
    "english-thinking": "node scripts/english-thinking-optimizer.js",
    "code-quality": "node scripts/actual-guardrails-system.js",
    "optimize-tokens": "node scripts/english-thinking-optimizer.js",
    "seven-literature": "node scripts/seven-literature-complete-system.js"
  },
  "keywords": [
    "hotel",
    "management",
    "system",
    "integration",
    "authentication",
    "common",
    "shared"
  ],
  "author": "Hotel Development Team",
  "license": "MIT",
  "ts-node": {
    "esm": true,
    "experimentalSpecifierResolution": "node"
  },
  "dependencies": {
    "@langchain/anthropic": "^0.3.25",
    "@langchain/community": "^0.3.49",
    "@langchain/openai": "^0.6.3",
    "@prisma/client": "^5.21.1",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/fs-extra": "^11.0.4",
    "@types/uuid": "^10.0.0",
    "ajv": "^8.17.1",
    "anthropic": "^0.0.0",
    "axios": "^1.11.0",
    "bcrypt": "^5.1.1",
    "bcryptjs": "^2.4.3",
    "chokidar": "^4.0.3",
    "chromadb": "^3.0.10",
    "cohere-ai": "^7.18.0",
    "cors": "^2.8.5",
    "express": "^4.21.1",
    "express-rate-limit": "^7.4.1",
    "fs-extra": "^11.3.0",
    "helmet": "^8.0.0",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "langchain": "^0.3.30",
    "multer": "^1.4.5-lts.1",
    "nodemon": "^3.1.10",
    "openai": "^4.104.0",
    "prisma": "^5.21.1",
    "redis": "^4.7.0",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",
    "uuid": "^11.1.0",
    "winston": "^3.15.0",
    "zod": "^3.23.8",
    "zod-validation-error": "^4.0.1"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/multer": "^1.4.12",
    "@types/node": "^24.1.0",
    "dotenv": "^16.6.1",
    "glob": "^11.0.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
